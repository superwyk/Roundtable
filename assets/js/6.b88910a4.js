(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{202:function(t,a,s){t.exports=s.p+"assets/img/copy-complicated-linked-list-01.c7c02c0b.png"},203:function(t,a,s){t.exports=s.p+"assets/img/copy-complicated-linked-list-02.d30e0680.png"},204:function(t,a,s){t.exports=s.p+"assets/img/copy-complicated-linked-list-03.f3e12a11.png"},239:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"复杂链表的复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂链表的复制","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂链表的复制")]),t._v(" "),e("h2",{attrs:{id:"_1、题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、题目描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、题目描述")]),t._v(" "),e("p",[t._v("输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）。")]),t._v(" "),e("h2",{attrs:{id:"_2、思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、思路","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、思路")]),t._v(" "),e("p",[t._v("本题有以下三种解法：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("第一种：先按照next复制，然后依次添加random指针，添加时需要定位random的位置，定位一次需要一次遍历，需要O（n^2）的复杂度。")])]),t._v(" "),e("li",[e("p",[t._v("第二种：先按照next复制，然后用一个hashmap保存原节点和复制后节点的对应关系，则用O（n）的空间复杂度使时间复杂度降到了O（n）。")])]),t._v(" "),e("li",[e("p",[t._v("第三种（最优方法）：同样先按next复制，但是把复制后的节点放到原节点后面，则可以很容易的添加random，最后按照奇偶位置拆成两个链表，时间复杂度O（n），不需要额外空间。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(202),alt:""}}),t._v(" "),e("img",{attrs:{src:s(203),alt:""}}),t._v(" "),e("img",{attrs:{src:s(204),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_3、代码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、代码实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、代码实现")])])}),[],!1,null,null,null);a.default=r.exports}}]);