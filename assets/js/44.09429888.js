(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{272:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("本文是在 ConardLi的“"),a("a",{attrs:{href:"https://juejin.im/post/5cec1bcff265da1b8f1aa08f",target:"_blank",rel:"noopener noreferrer"}},[t._v("【JS 进阶】你真的掌握变量和类型了吗"),a("OutboundLink")],1),t._v("”文章上的总结和扩展，集中记述了js中的变量和数据类型的相关知识点及应用场景，共分为5部分。")])]),t._v(" "),a("blockquote",[a("p",[t._v("本文为“JS专题-变量与类型”的第2篇，2）JS 3种疑难基础类型，主要关注null/undefined，Symbol，Number三种疑难基础JS类型。")])]),t._v(" "),a("h2",{attrs:{id:"分不清的null和undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分不清的null和undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" 分不清的"),a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")])]),t._v(" "),a("p",[t._v("在原始类型中，有两个类型Null和Undefined，他们都有且仅有一个值，null和undefined")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("null")]),t._v(" "),a("ul",[a("li",[t._v("表示被赋值过的对象，刻意把一个对象赋值为null，故意表示其为空，不应有值。")]),t._v(" "),a("li",[t._v("所以对象的某个属性值为null是正常的，null转换为数值时值为"),a("code",[t._v("0")]),t._v("。")])])]),t._v(" "),a("li",[a("code",[t._v("undefined")]),t._v(" "),a("ul",[a("li",[t._v("表示“缺少值”，即此处应有一个值，但还没有定义，")]),t._v(" "),a("li",[t._v("如果一个对象的某个属性值为undefined，这是不正常的，如obj.name=undefined，我们不应该这样写，应该直接delete obj.name。")]),t._v(" "),a("li",[t._v("undefined 转为数值时为"),a("code",[t._v("NaN")]),t._v("(非数字值的特殊值)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v('JavaScript是一门动态类型语言，成员除了表示存在的空值外，还有可能根本就不存在（因为存不存在只在运行期才知道），这就是undefined的意义所在。对于JAVA这种强类型语言，如果有"undefined"这种情况，就会直接编译失败，所以在它不需要一个这样的类型。')])]),t._v(" "),a("h2",{attrs:{id:"不太熟的symbol类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不太熟的symbol类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 不太熟的"),a("code",[t._v("Symbol")]),t._v("类型")]),t._v(" "),a("p",[t._v("Symbol类型是ES6中新加入的一种原始类型。")]),t._v(" "),a("h3",{attrs:{id:"symbol的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol的特性","aria-hidden":"true"}},[t._v("#")]),t._v(" Symbol的特性")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("独一无二\n直接使用Symbol()创建新的symbol变量，可选用一个字符串用于描述。当参数为对象时，将调用对象的toString()方法。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Symbol() ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Symbol(ConardLi)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Symbol(ConardLi)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" sym3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Symbol([object Object])")]),t._v("\n")])])]),a("p",[t._v("用两个相同的字符串创建两个Symbol变量，它们是不相等的，独一无二的。")]),t._v(" "),a("p",[t._v("如果我们想创造两个相等的Symbol变量，可以使用"),a("code",[t._v("Symbol.for(key)")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("使用给定的key搜索现有的symbol，如果找到则返回该symbol。否则将使用给定的key在全局symbol注册表中创建一个新的symbol。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" sym2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("原始类型\n注意是使用Symbol()函数创建symbol变量，并非使用构造函数，使用new操作符会直接报错。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: Symbol is not a constructor")]),t._v("\n")])])]),a("p",[t._v("可以使用typeof运算符判断一个Symbol类型:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("不可枚举")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当使用Symbol作为对象属性时，可以保证对象不会出现重名属性，调用"),a("code",[t._v("for...in")]),t._v("不能将其枚举出来，另外调用"),a("code",[t._v("Object.getOwnPropertyNames")]),t._v("、"),a("code",[t._v("Object.keys()")]),t._v("也不能获取Symbol属性。")])]),t._v(" "),a("li",[a("p",[t._v("可以调用"),a("code",[t._v("Object.getOwnPropertySymbols()")]),t._v("用于专门获取Symbol属性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'code秘密花园'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["name"]')]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["name"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertySymbols")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Symbol(name)]")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"symbol的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol的应用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" Symbol的应用场景")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("应用一：防止XSS")]),t._v(" "),a("p",[t._v("JSON中不能存储Symbol类型的变量，这就是防止XSS的一种手段")])]),t._v(" "),a("li",[a("p",[t._v("应用二：私有属性\n在类中模拟私有属性，控制变量读写：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" privateField "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("myClass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("privateField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ConardLi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("privateField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("privateField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("应用三：防止属性污染")]),t._v(" "),a("p",[t._v("在某些情况下，我们可能要为对象添加一个属性，此时就有可能造成属性覆盖，用Symbol作为对象属性可以保证永远不会出现同名属性。")])])]),t._v(" "),a("h2",{attrs:{id:"不老实的number类型（取值精度与大数问题）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不老实的number类型（取值精度与大数问题）","aria-hidden":"true"}},[t._v("#")]),t._v(" 不老实的"),a("code",[t._v("Number")]),t._v("类型（取值精度与大数问题）")]),t._v(" "),a("p",[t._v("小数精度计算不精确的问题：比如0.1+0.2!==0.3")]),t._v(" "),a("h3",{attrs:{id:"_1-为什么会出现-精度丢失？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么会出现-精度丢失？","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 为什么会出现 "),a("code",[t._v("精度丢失")]),t._v("？")]),t._v(" "),a("ul",[a("li",[t._v("计算机中所有的数据都是"),a("code",[t._v("以二进制存储")]),t._v("的，所以在计算时计算机要把数据先转换成"),a("code",[t._v("二进制")]),t._v("进行计算，然后在把计算结果转换成"),a("code",[t._v("十进制")]),t._v("。在计算0.1+0.2时，二进制计算发生了精度丢失，导致再转换成十进制后和预计的结果不符。")])]),t._v(" "),a("h3",{attrs:{id:"_2-小数的二进制大多数都是无限循环的，js是怎么来存储他们的呢？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-小数的二进制大多数都是无限循环的，js是怎么来存储他们的呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 小数的"),a("code",[t._v("二进制")]),t._v("大多数都是"),a("code",[t._v("无限循环")]),t._v("的，JS是"),a("code",[t._v("怎么来存储")]),t._v("他们的呢？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ECMAScript中的Number类型遵循"),a("code",[t._v("IEEE 754")]),t._v("标准。使用"),a("code",[t._v("64位固定长度")]),t._v("来表示。不单单是JS，很多语言的数字类型都遵循这个标准，例如JAVA,所以很多语言同样有着上面同样的问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/variablesAndTypes/precision.png",alt:"精度位数"}})])]),t._v(" "),a("li",[a("p",[t._v("IEEE754标准 包含一组实数的二进制表示法。它有三部分组成：符号位、指数位、尾数位。JS使用的是"),a("code",[t._v("64位双精度浮点数编码")]),t._v("，所以它的"),a("code",[t._v("符号位")]),t._v("占"),a("code",[t._v("1位")]),t._v("，"),a("code",[t._v("指数位")]),t._v("占"),a("code",[t._v("11位")]),t._v("，"),a("code",[t._v("尾数位")]),t._v("占"),a("code",[t._v("52位")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("符号位")]),t._v("就是标识正负的，"),a("code",[t._v("1")]),t._v("表示"),a("code",[t._v("负")]),t._v("，"),a("code",[t._v("0")]),t._v("表示"),a("code",[t._v("正")]),t._v("；"),a("code",[t._v("指数位")]),t._v("存储科学计数法的指数；"),a("code",[t._v("尾数位")]),t._v("存储科学计数法后的"),a("code",[t._v("有效数字")]),t._v("；")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/variablesAndTypes/64double.png",alt:"64位双精度"}})]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("0.1")]),t._v("为例：它的二进制为："),a("code",[t._v("0.0001100110011001100...")]),t._v("，为了节省存储空间，在计算机中它是以科学计数法表示的，也就是 1.100110011001100... X 2"),a("sup",[t._v("-4")])])])]),t._v(" "),a("p",[t._v("所以我们 "),a("strong",[t._v("通常看到的二进制，其实是计算机实际存储的尾数位。")])]),t._v(" "),a("h3",{attrs:{id:"_3-js中的tostring-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-js中的tostring-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. JS中的"),a("code",[t._v("toString(2)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由于尾数位只能存储52个数字，这就能解释toString(2)的执行结果了:由于限制，有效数字第53位及以后的数字是不能存储的，它遵循，如果是1就向前一位进1，如果是0就舍弃的原则。")])]),t._v(" "),a("li",[a("p",[t._v("0.1的二进制科学计数法第53位是1，0.2有着同样的问题，其实正是由于这样的存储，在这里有了精度丢失，导致了0.1+0.2!=0.3。")])]),t._v(" "),a("li",[a("p",[t._v("事实上有着同样精度问题的计算还有很多，我们无法把他们都记下来，所以当程序中有数字计算时，我们最好用工具库来帮助我们解决:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/nefe/number-precision",target:"_blank",rel:"noopener noreferrer"}},[t._v("number-precision"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/josdejong/mathjs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mathjs"),a("OutboundLink")],1)])])])]),t._v(" "),a("h3",{attrs:{id:"_4-js能表示的最大数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-js能表示的最大数字","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. JS能表示的"),a("code",[t._v("最大数字")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由与IEEE 754双精度64位规范的限制：64位浮点数的指数部分的长度是11个二进制位，意味着指数部分的最大值是2047（2的11次方减1）。也就是说，64位浮点数的指数部分的值最大为2047，分出一半表示负数。")])]),t._v(" "),a("li",[a("p",[t._v("则 JS 能够表示的数值范围为 2"),a("sup",[t._v("1024")]),t._v(" 到 2"),a("sup",[t._v("-1023")]),t._v(" 之间（"),a("code",[t._v("不含两个端点")]),t._v("），超出这个范围的数无法表示。")])]),t._v(" "),a("li",[a("p",[t._v("如果一个数大于等于2的1024次方，那么就会发生“正向溢出”，即 JS 无法表示这么大的数，这时就会返回Infinity。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Infinity")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("如果一个数小于等于2的-1075次方（指数部分最小值-1023，再加上小数部分的52位），那么就会发生为“负向溢出”，即 JS 无法表示这么小的数，这时会直接返回0。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1075")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("JS 提供Number对象的"),a("code",[t._v("MAX_VALUE")]),t._v("和"),a("code",[t._v("MIN_VALUE")]),t._v("属性，")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.7976931348623157e+308")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIN_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5e-324")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1074")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5e-324")]),t._v("\n")])])]),a("p",[t._v("尾数位能表达的最大数字即尾数位都为 1的情况，所以JS 能表示的"),a("code",[t._v("最大数字")]),t._v("即为 1.111...X 2"),a("sup",[t._v("1023")]),t._v("这个结果转换成十进制是1.7976931348623157e+308,这个结果即为"),a("code",[t._v("Number.MAX_VALUE")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"_5-最大安全整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-最大安全整数","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("最大安全整数")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS 能够准确表示的整数范围在 -2"),a("sup",[t._v("53")]),t._v(" 到 2"),a("sup",[t._v("53")]),t._v(" 之间（"),a("code",[t._v("不含两个端点")]),t._v("），超过这个范围，无法精确表示这个值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740992")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740992")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740992")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 超出2的53次方之后，这个数就不精确了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740993")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740992")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("JS 中"),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v("表示最大安全整数，计算结果是9007199254740991，即在这个数范围内不会出现精度丢失（小数除外）,这个数实际上是1.111...X 2"),a("sup",[t._v("52")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("ES6 引入了 "),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v(" 和 "),a("code",[t._v("Number.MIN_SAFE_INTEGER")]),t._v(" 这两个常量，用来表示这个范围的上下限（JS能够精确表示的极限）:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740991")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIN_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIN_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740991")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("官方也考虑到了这个问题，bigInt类型在es10中被提出，现在Chrome中已经可以使用，使用bigInt可以操作超过最大安全数字的数字。但我们同样可以用工具库来帮助我们解决:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/justmoon/node-bignum",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-bignum)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/substack/node-bigint",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-bigint"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);